<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20213.21.1112.1434                               -->
<workbook original-version='18.1' source-build='2021.3.4 (20213.21.1112.1434)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <BasicButtonObject />
    <CollapsiblePane />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Tweet+' inline='true' name='federated.120svys17vpkyz1bgdwsu1e14g30' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tweet' name='textscan.0gzjkwi0utf7691cpqh6z1psotdv'>
            <connection class='textscan' directory='C:/Users/megan/OneDrive/Documents/UBC/COSC329/Project/CSV' filename='Tweet.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0gzjkwi0utf7691cpqh6z1psotdv' name='Hashtag_Tweet.csv' table='[Hashtag_Tweet#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA'>
            <column datatype='integer' name='tweet_id' ordinal='0' />
            <column datatype='string' name='hashtag' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.0gzjkwi0utf7691cpqh6z1psotdv' name='Tweet.csv' table='[Tweet#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
              <column datatype='integer' name='tweet_id' ordinal='0' />
              <column datatype='integer' name='user_id' ordinal='1' />
              <column datatype='datetime' date-parse-format='yyyy-MM-dd&apos;T&apos;HH:mm:ss.SSS&apos;Z&apos;' name='created_at' ordinal='2' />
              <column datatype='string' name='text' ordinal='3' />
              <column datatype='integer' name='like_count' ordinal='4' />
              <column datatype='integer' name='quote_count' ordinal='5' />
              <column datatype='integer' name='reply_count' ordinal='6' />
              <column datatype='integer' name='retweet_count' ordinal='7' />
              <column datatype='real' name='sentiment_score' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.0gzjkwi0utf7691cpqh6z1psotdv' name='Hashtag_Tweet.csv' table='[Hashtag_Tweet#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_CA'>
              <column datatype='integer' name='tweet_id' ordinal='0' />
              <column datatype='string' name='hashtag' ordinal='1' />
            </columns>
          </relation>
          <relation connection='textscan.0gzjkwi0utf7691cpqh6z1psotdv' name='Mention_Tweet.csv' table='[Mention_Tweet#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_CA'>
              <column datatype='integer' name='tweet_id' ordinal='0' />
              <column datatype='integer' name='mentions' ordinal='1' />
            </columns>
          </relation>
          <relation connection='textscan.0gzjkwi0utf7691cpqh6z1psotdv' name='Referenced_Tweet.csv' table='[Referenced_Tweet#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
              <column datatype='integer' name='tweet_id' ordinal='0' />
              <column datatype='integer' name='referenced_tweet_id' ordinal='1' />
              <column datatype='string' name='type' ordinal='2' />
            </columns>
          </relation>
          <relation connection='textscan.0gzjkwi0utf7691cpqh6z1psotdv' name='URL_Tweet.csv' table='[URL_Tweet#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_CA'>
              <column datatype='integer' name='tweet_id' ordinal='0' />
              <column datatype='string' name='urls' ordinal='1' />
            </columns>
          </relation>
          <relation connection='textscan.0gzjkwi0utf7691cpqh6z1psotdv' name='User.csv' table='[User#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
              <column datatype='integer' name='user_id' ordinal='0' />
              <column datatype='integer' name='followers' ordinal='1' />
              <column datatype='integer' name='following' ordinal='2' />
              <column datatype='integer' name='tweet_count' ordinal='3' />
              <column datatype='integer' name='listed_count' ordinal='4' />
              <column datatype='boolean' name='verified' ordinal='5' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[created_at]' value='[Tweet.csv].[created_at]' />
          <map key='[followers]' value='[User.csv].[followers]' />
          <map key='[following]' value='[User.csv].[following]' />
          <map key='[hashtag]' value='[Hashtag_Tweet.csv].[hashtag]' />
          <map key='[like_count]' value='[Tweet.csv].[like_count]' />
          <map key='[listed_count]' value='[User.csv].[listed_count]' />
          <map key='[mentions]' value='[Mention_Tweet.csv].[mentions]' />
          <map key='[quote_count]' value='[Tweet.csv].[quote_count]' />
          <map key='[referenced_tweet_id]' value='[Referenced_Tweet.csv].[referenced_tweet_id]' />
          <map key='[reply_count]' value='[Tweet.csv].[reply_count]' />
          <map key='[retweet_count]' value='[Tweet.csv].[retweet_count]' />
          <map key='[sentiment_score]' value='[Tweet.csv].[sentiment_score]' />
          <map key='[text]' value='[Tweet.csv].[text]' />
          <map key='[tweet_count]' value='[User.csv].[tweet_count]' />
          <map key='[tweet_id (Hashtag_Tweet.csv)]' value='[Hashtag_Tweet.csv].[tweet_id]' />
          <map key='[tweet_id (Mention_Tweet.csv)]' value='[Mention_Tweet.csv].[tweet_id]' />
          <map key='[tweet_id (Referenced_Tweet.csv)]' value='[Referenced_Tweet.csv].[tweet_id]' />
          <map key='[tweet_id (URL_Tweet.csv)]' value='[URL_Tweet.csv].[tweet_id]' />
          <map key='[tweet_id]' value='[Tweet.csv].[tweet_id]' />
          <map key='[type]' value='[Referenced_Tweet.csv].[type]' />
          <map key='[urls]' value='[URL_Tweet.csv].[urls]' />
          <map key='[user_id (User.csv)]' value='[User.csv].[user_id]' />
          <map key='[user_id]' value='[Tweet.csv].[user_id]' />
          <map key='[verified]' value='[User.csv].[verified]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Tweet.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='record-delimiter'>&quot;\\r&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tweet_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tweet_id]</local-name>
            <parent-name>[Tweet.csv]</parent-name>
            <remote-alias>tweet_id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>user_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[user_id]</local-name>
            <parent-name>[Tweet.csv]</parent-name>
            <remote-alias>user_id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>created_at</remote-name>
            <remote-type>7</remote-type>
            <local-name>[created_at]</local-name>
            <parent-name>[Tweet.csv]</parent-name>
            <remote-alias>created_at</remote-alias>
            <ordinal>2</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>text</remote-name>
            <remote-type>129</remote-type>
            <local-name>[text]</local-name>
            <parent-name>[Tweet.csv]</parent-name>
            <remote-alias>text</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>like_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[like_count]</local-name>
            <parent-name>[Tweet.csv]</parent-name>
            <remote-alias>like_count</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>quote_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[quote_count]</local-name>
            <parent-name>[Tweet.csv]</parent-name>
            <remote-alias>quote_count</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reply_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[reply_count]</local-name>
            <parent-name>[Tweet.csv]</parent-name>
            <remote-alias>reply_count</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>retweet_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[retweet_count]</local-name>
            <parent-name>[Tweet.csv]</parent-name>
            <remote-alias>retweet_count</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sentiment_score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sentiment_score]</local-name>
            <parent-name>[Tweet.csv]</parent-name>
            <remote-alias>sentiment_score</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Hashtag_Tweet.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='record-delimiter'>&quot;\\r&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tweet_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tweet_id (Hashtag_Tweet.csv)]</local-name>
            <parent-name>[Hashtag_Tweet.csv]</parent-name>
            <remote-alias>tweet_id</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hashtag</remote-name>
            <remote-type>129</remote-type>
            <local-name>[hashtag]</local-name>
            <parent-name>[Hashtag_Tweet.csv]</parent-name>
            <remote-alias>hashtag</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Mention_Tweet.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='record-delimiter'>&quot;\\r&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tweet_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tweet_id (Mention_Tweet.csv)]</local-name>
            <parent-name>[Mention_Tweet.csv]</parent-name>
            <remote-alias>tweet_id</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mentions</remote-name>
            <remote-type>20</remote-type>
            <local-name>[mentions]</local-name>
            <parent-name>[Mention_Tweet.csv]</parent-name>
            <remote-alias>mentions</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Referenced_Tweet.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='record-delimiter'>&quot;\\r&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tweet_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tweet_id (Referenced_Tweet.csv)]</local-name>
            <parent-name>[Referenced_Tweet.csv]</parent-name>
            <remote-alias>tweet_id</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>referenced_tweet_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[referenced_tweet_id]</local-name>
            <parent-name>[Referenced_Tweet.csv]</parent-name>
            <remote-alias>referenced_tweet_id</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[Referenced_Tweet.csv]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[URL_Tweet.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='record-delimiter'>&quot;\\r&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tweet_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tweet_id (URL_Tweet.csv)]</local-name>
            <parent-name>[URL_Tweet.csv]</parent-name>
            <remote-alias>tweet_id</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>urls</remote-name>
            <remote-type>129</remote-type>
            <local-name>[urls]</local-name>
            <parent-name>[URL_Tweet.csv]</parent-name>
            <remote-alias>urls</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[User.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='record-delimiter'>&quot;\\r&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>user_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[user_id (User.csv)]</local-name>
            <parent-name>[User.csv]</parent-name>
            <remote-alias>user_id</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>followers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[followers]</local-name>
            <parent-name>[User.csv]</parent-name>
            <remote-alias>followers</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>following</remote-name>
            <remote-type>20</remote-type>
            <local-name>[following]</local-name>
            <parent-name>[User.csv]</parent-name>
            <remote-alias>following</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tweet_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tweet_count]</local-name>
            <parent-name>[User.csv]</parent-name>
            <remote-alias>tweet_count</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>listed_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[listed_count]</local-name>
            <parent-name>[User.csv]</parent-name>
            <remote-alias>listed_count</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>verified</remote-name>
            <remote-type>11</remote-type>
            <local-name>[verified]</local-name>
            <parent-name>[User.csv]</parent-name>
            <remote-alias>verified</remote-alias>
            <ordinal>23</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.120svys17vpkyz1bgdwsu1e14g30].[ctd:tweet_id (Hashtag_Tweet.csv):qk]&quot;' value='Hashtag' />
          <alias key='&quot;[federated.120svys17vpkyz1bgdwsu1e14g30].[ctd:tweet_id (Mention_Tweet.csv):qk]&quot;' value='Mention' />
          <alias key='&quot;[federated.120svys17vpkyz1bgdwsu1e14g30].[ctd:tweet_id (URL_Tweet.csv):qk]&quot;' value='Url' />
        </aliases>
      </column>
      <column datatype='integer' name='[Like Count (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='3' formula='[like_count]' peg='0' size='4885' />
      </column>
      <column datatype='integer' name='[Sentiment Score (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='-2' formula='[sentiment_score]' peg='0' size='0.06' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Hashtag_Tweet.csv' datatype='table' name='[__tableau_internal_object_id__].[Hashtag_Tweet.csv_E669AD6B68C14CEC91298C5A3E1C3B9A]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Mention_Tweet.csv' datatype='table' name='[__tableau_internal_object_id__].[Mention_Tweet.csv_B6A2E7E5FD0144E7807A99DEF07F7BF2]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Referenced_Tweet.csv' datatype='table' name='[__tableau_internal_object_id__].[Referenced_Tweet.csv_E6EC76555CA0434FBF98FD9A5360B702]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Tweet.csv' datatype='table' name='[__tableau_internal_object_id__].[Tweet.csv_E91B1F237CFC4BB1BCE0A8B538903DDD]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='URL_Tweet.csv' datatype='table' name='[__tableau_internal_object_id__].[URL_Tweet.csv_FDD91E92735942359268AEC4E05CD536]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='User.csv' datatype='table' name='[__tableau_internal_object_id__].[User.csv_FF1748E978A643EABEA3140515E181DD]' role='measure' type='quantitative' />
      <column caption='Created At' datatype='datetime' name='[created_at]' role='dimension' type='ordinal' />
      <column caption='Followers' datatype='integer' name='[followers]' role='measure' type='quantitative' />
      <column caption='Following' datatype='integer' name='[following]' role='measure' type='quantitative' />
      <column caption='Hashtag' datatype='string' name='[hashtag]' role='dimension' type='nominal' />
      <column caption='Like Count' datatype='integer' name='[like_count]' role='measure' type='quantitative' />
      <column caption='Listed Count' datatype='integer' name='[listed_count]' role='measure' type='quantitative' />
      <column caption='Mentions' datatype='integer' name='[mentions]' role='measure' type='quantitative' />
      <column caption='Quote Count' datatype='integer' name='[quote_count]' role='measure' type='quantitative' />
      <column caption='Referenced Tweet Id' datatype='integer' name='[referenced_tweet_id]' role='dimension' type='ordinal' />
      <column caption='Reply Count' datatype='integer' name='[reply_count]' role='measure' type='quantitative' />
      <column caption='Retweet Count' datatype='integer' name='[retweet_count]' role='measure' type='quantitative' />
      <column caption='Sentiment Score' datatype='real' name='[sentiment_score]' role='measure' type='quantitative' />
      <column caption='Text' datatype='string' name='[text]' role='dimension' type='nominal' />
      <column caption='Tweet Count' datatype='integer' name='[tweet_count]' role='measure' type='quantitative' />
      <column caption='tweet id (Hashtag Tweet.csv)' datatype='integer' name='[tweet_id (Hashtag_Tweet.csv)]' role='dimension' type='ordinal' />
      <column caption='tweet id (Mention Tweet.csv)' datatype='integer' name='[tweet_id (Mention_Tweet.csv)]' role='dimension' type='ordinal' />
      <column caption='tweet id (Referenced Tweet.csv)' datatype='integer' name='[tweet_id (Referenced_Tweet.csv)]' role='dimension' type='ordinal' />
      <column caption='tweet id (URL Tweet.csv)' datatype='integer' name='[tweet_id (URL_Tweet.csv)]' role='dimension' type='ordinal' />
      <column caption='Tweet Id' datatype='integer' name='[tweet_id]' role='dimension' type='ordinal' />
      <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
      <column caption='Urls' datatype='string' name='[urls]' role='dimension' type='nominal' />
      <column caption='user id (User.csv)' datatype='integer' name='[user_id (User.csv)]' role='dimension' type='ordinal' />
      <column caption='User Id' datatype='integer' name='[user_id]' role='dimension' type='ordinal' />
      <column caption='Verified' datatype='boolean' name='[verified]' role='dimension' type='nominal' />
      <column-instance column='[followers]' derivation='Avg' name='[avg:followers:qk]' pivot='key' type='quantitative' />
      <column-instance column='[following]' derivation='Avg' name='[avg:following:qk]' pivot='key' type='quantitative' />
      <column-instance column='[like_count]' derivation='Avg' name='[avg:like_count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[listed_count]' derivation='Avg' name='[avg:listed_count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[quote_count]' derivation='Avg' name='[avg:quote_count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[reply_count]' derivation='Avg' name='[avg:reply_count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[retweet_count]' derivation='Avg' name='[avg:retweet_count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[tweet_count]' derivation='Avg' name='[avg:tweet_count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[tweet_id (Hashtag_Tweet.csv)]' derivation='CountD' name='[ctd:tweet_id (Hashtag_Tweet.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[tweet_id (Mention_Tweet.csv)]' derivation='CountD' name='[ctd:tweet_id (Mention_Tweet.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[tweet_id (URL_Tweet.csv)]' derivation='CountD' name='[ctd:tweet_id (URL_Tweet.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[like_count]' derivation='Max' name='[max:like_count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[quote_count]' derivation='Max' name='[max:quote_count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[reply_count]' derivation='Max' name='[max:reply_count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[retweet_count]' derivation='Max' name='[max:retweet_count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[hashtag]' derivation='None' name='[none:hashtag:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:hashtag:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;airtel&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;backlash&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;biden&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BoycottBeijingOlympics&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;boycottkelloggsau&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BTSarmy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Catholic&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chipotle&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;CornFlakes&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cutthecarbs&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;dontbuykellogs&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;EmmaVigeland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;FiduciaryFlakes&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;FoxNewsLies&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;gay&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;GOPDomesticTerrorists&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;HonorYourContract&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jan6thCommittee&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;kellogg&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;KelloggsWorkers&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;labour&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;mandate&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MutualAid4Protesters&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nissan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;NYC&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;People&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Protest&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Resistance&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Scumbags&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;solidarity&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Stockmarket&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;supplychain&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;TakeCareOfYourEmployees&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Transparency&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;unionize&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;usa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;WillPatreonForData&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;YourVoiceYourIndex&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1u&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AntiWork&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;behindthebastardspodcast&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BLM&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BoycottKellogg&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BoycottStudentLoans&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;callingit&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CerealKillers&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;companyculturematters&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;crackergate&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;dkpol&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dutchman&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;fails&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Food&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;fuckkelloggs&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;GMOs&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;GTTO&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Injustice&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;justsayin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;KelloggsIsUnAmerican&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;KissItKelloggs&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;livingwages&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MorningStarFarms&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;NeverCrossAPickett&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;NoVaccineMandates&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;organic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;power2thepeople&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;rAntiwork&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ScabCracklePop&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SlaveLabor&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Starbucks&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;STRIKERSDAY&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;supportunions&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ThrowBackKelloggs&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;union&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;unionworkers&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;WBA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;workingpoor&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ACNP2021&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ATTfundsOANtraitors&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BernieSanders&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BoycottAmazon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BOYCOTTKelloggs&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BoycottWannaOne2021MAMA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CandleFactory&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;cheezit&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;controlledopposition&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CTXC&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DoNotScab&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;EdEddandEddy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;fairwages&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ForABetterTomorrow&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;FUCKNESTLE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Google&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Health&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;IRRELEVANT&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;KashiGoLean&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;KELLOGGSTRIKE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;labor&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Maddow&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;mtpol&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;News&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;nsfw&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;pathetic&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;PROAct&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;replacementemployees&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;scabotage&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SnapCracklePopUinnamoutK&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;StayStrong&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;StudentLoans&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Swingtrades&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tornado&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;unionbustingisdigusting&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;UnlimitedGeneralStrike&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;WestMichigan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;XM&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;AmazonStrike&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;BanGmos&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;BidenDelivers&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;BoycottCoke&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;boycottkellogs&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;burnout&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CatholicTwitter&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CHZ&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;corporategreed&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;DebtStrike&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;DontCrossTheLine&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;endunionbusting&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;FIreKelloggCEO&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;FreeAssangeNOW&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;GeneralStrikeSimmit&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;greed&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;HumanRightsViolations&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;JohnDeerePedalTractors&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;kelloggco&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;kellogs&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;LetsGoBrandon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;merrystrikemas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;nationalyousuckday&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;NoMoreNeocolonialism&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;officememes&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;picket&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;prounion&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;RightToKnow&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ShakespeareSunday&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;solidaritywithworkers&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Strike&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SupportKelloggsUnion&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;teamstersstandwithBCTGM&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;TruckersStrike&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;unions&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;vegan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Workers&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;albertsons&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BACKLASH&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Biden&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BoycottBollywood&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BoycottKelloggsUs&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BuildBackBetter&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CatholicChurch&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ChipotleIsMyLife&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;cornflakes&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;dailyvoice&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;DontBuyThisShit&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;employeeretention&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;FightFor15&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;freealexienavaly&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;GeneralStrike&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;grabyourwallet&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;HR&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;JerryTheScab&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kellogg&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kelloggsworkers&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;LdnOnt&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;manufacturing&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MutualAidRequest&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;NoContractNoKelloggs&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;NYU&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Petition&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ProtestNow&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;RetweeetPlease&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SDV&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Solidarity&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;stocks&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Support&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;TaxTheRich&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Treason&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;UnionJobs&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ValueYourWorkers&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;wiunion&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;zerohedge&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;AFSCME&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;auspol&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BerniesRight&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BoycottAntim&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;boycottKelloggs&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;brandnewsentence&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;canlab&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CheezIt&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;cops&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CUNY&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;DontBeAScab&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;EEs&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;fake&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ForTheUnionMakesUsStrong&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;FYP&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;gop&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;healthcare&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;IStandWithKelloggStrikers&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;keap&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;kelloggstrike&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;laborshortage&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;maga&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MulchTheRich&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;NewVideo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;NuclearEconomicPin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;PawnStars&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ProfitsOverPeople&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ReplacementWorkers&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SCABs&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Socialism&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SteamRollTheGOP&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;StudentLoanStrike&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SWIW&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;tornadoes&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;UnionBustingIsDisgusting&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;urine&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;WeThePeople&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;XRP&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;andylevin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BCTGM&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BlackLivesMatter&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BoycottKashi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BoycottPoliticans&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;ByeKelloggs&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;cereal&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;collaboration&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;covid&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Disney&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DumpKelloggs&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Evil&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;followforfollow&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;fuckkellog&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;GivingTuesday&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;GreveDesEcoles&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;inflation&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;JulianAssange&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;KelloggsBoycott&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;KentuckyStrong&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;livingwage&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;mondaythoughts&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;NOSCABS_KELLOGGS&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;onted&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;poptarts&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;RaiseWages&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;savedemocracy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Siguemeytesigo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;StandWithUnionWorkers&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Strikemas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SupportUnionFamilies&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;thread&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;UBI&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;unionstrong&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;walmart&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;WorkingFamilies&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;1000Shib&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Antiwork&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BelowDeck&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Boycott&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;boycottkellogg&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;boycottTesco&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;cerealplant&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Conservatives&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Crypto&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;doBetter&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;eatgeneralmills&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;faircontract&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;foodlabor&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;fuckKelloggs&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;GoBucks&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;HardLensMedia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;InstitutionalCorruption&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;JustSaying&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;KelloggsScabbyCereal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;kroger&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;LocalGovMatters&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;morningstarfarms&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;NeverForgetJanuary6th&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;NoVaccinePassports&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Organize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;PredatoryCapitalism&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;realfood&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ScabKrispies&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SleepyJoe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;starbucks&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;strikes&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SupportUnions&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;TikTok&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;UNION&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;unionyes&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;WealthEquity&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;workmeme&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;AmericanPickers&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;battlecreek&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;bitcoin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;boycottGM&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BoycottNestle&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BuyPost&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CEOGreedMustBeStopped&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CNN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CountinCars&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;DemVoice1&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;DumpKellogg&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;FloodOfFakeJobApplicationsCrashedKelloggs&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;FruitLooters&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;GENZ&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;grève&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;INDIGENOUS&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;JoshDuggar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;kelloggs&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;KellogsSucks&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lifechanging&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mohal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nestle&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;NoScabs&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;onpoli&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Politics&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Python&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SarangPokhare&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;sickening&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;StandUp4HumanRights&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;StrikeMas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SupportTheStrike&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;thewhitehouse&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;tryUS&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;unionsolidarity&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;VoteBlue2022&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;WorkersUnite&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;After&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;betterdotcom&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BoycottATT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BoycottKelloggs&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;brandpurpose&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;canlan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CheezIts&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cornelius&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CUOnStrike&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;dontbuy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;eggo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;FBiden&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;FoxBusiness&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;gamedev&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;GOPBetrayedAmerica&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;hikes&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;IsupportBCTGM&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Keebler&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kelloggstrike&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;LaborSmacks&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;male&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MutualAid&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;NFL&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;NUFC&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;pay&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;propaganda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;replacementworkers&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;scabs&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SocialistSunday&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Stimulus&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SundayMotivation&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SWorker&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Toronto&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;unionised&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;US&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;wethepeople&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;youlovetoseeit&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;AmazonWarehouse&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;bankelloggs&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bidenflation&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BoycottDebt&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BoycottKroger&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;business&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;cc&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CivilRights&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CorporateIntegrity&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Deeply&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;dontcrosstheline&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;EpicFail&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;FJB&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;FreeDinner&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;GeneralStrikeSummit&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;GreedIsUgly&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;humor&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;JohnsonMustResign&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kelloggmeme&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;KellogsBoycott&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;LetsGoSupplies&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Metal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;native&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;NoMoreTonyTiger&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;plantbased&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;PublicHealthHaiku&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;RT&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Shameful&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Somizi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;strike&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SupportKelloggsWorkers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;tennesseekelloggco&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;TruckersStrikeWorldWide&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Unions&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;vegans&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;WorkerSolidarity&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;AmericanDream&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;bargaining&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;bigmistakekelloggs&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BoycottFossilFuel&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BoycottMissUniverse2021&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;But&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;cdnpoli&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ClassWar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Corporations&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;demexit&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;dontcrossthepicketline&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;EPO&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;FKkelloggs&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;FreeLaborMarket&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;GeneralStrikeToEndCapitalistGreed&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;GreedyBastards&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ICYMI&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;JoinAUnion&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;KelloggMemeChallenge&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;kellogsStrike&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;LGBTQ&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;NBC&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;NoRiceKrispieTreats&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;onedaylonger&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;PoliticanStrike&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;publix&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;RVA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ShameOnKelloggs&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Spectrumstrike&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;StrikeForDecentWagesandBenefits&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SupportLocal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;TheMajorityReport&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;trump&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;UnionsForAll&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;vegetarian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;WorkersRights&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;and&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BattleCreekMI&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BLACKCOFFEE&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BoycottIHOP&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;boycottPalmOil&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;buystorebrands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;CEOS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;CO2nservatismKills&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Covid&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Disgraceful&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;dumpkelloggs&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Everyday&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Followback&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;FuckBiden&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;GETMEREWRITE&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;greve&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;inequality&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;joshfunk&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kelloggs&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;LivableWage&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MondayMotivation&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Netflix&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;noscabs&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Poptarts&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;quadrillion&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;satire&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sign&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;StandWithLabor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;strikemas&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SupportUnion&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;TheyWantSlaveLabor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;twotier&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;UnionStong&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;wageshortage&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;WorkingClass&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;antiwork&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BearNaked&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BlackTechTwitter&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BoycottKellog&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;boycottspotify&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;ByeTonyTheTiger&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CerealCity&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;ColumbiaU&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;COVID19&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;dkoeko&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DumpKellogs&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;FActory&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;food&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;fuckkellogg&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;GlobalWarming&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;GRINCH&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;inhumane&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;JussieSmollett&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;kelloggsboycott&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kentuckytornado&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;LivingWage&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Money&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;NeverCrossAPicketLine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;nothispanicnotlatino&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;OptionsTrading&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;PopTarts&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;RaisinBran&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;scab&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SilentStrike&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;StandWithWorkers&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Strikember&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SupportUnionJobs&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;throwback&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Union&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;UnionStrong&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;watersports&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;workingpeople&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;AllDay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BackTheWorkers&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BidenApproval&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;boycottbreakfastcereal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Boycottkellogs&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;buildbackbetter&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CatholicSolidarity&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ChipotleMinis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CorporateGreed&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Daytades&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;dontcross&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;employees&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Finance&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;freeAssange&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;GeneralStrikeNow&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;gradschool&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hulu&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;jobmeme&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;KelloggBoycott&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;KelloggsWorkersMatter&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;leftists&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Market&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;mutualfunds&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NoMore&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;oecta&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;pewpew&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ProtestPorn&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;RiceCrispies&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Selfishness&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;solidarityforerver&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;StopCorporateGreed&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SupportAmericanWorkers&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;TeamCheerios&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;trending&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;UnionLaborIsGrrrrreat&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Vanc&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;WomensRights&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ケロッグ&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;AGU21&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;AustraliaHasFallen&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BIDEN&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BoycottBeijing2022&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Boycottkelloggs&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;breaking&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CapitalismCooksThePlanet&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ChildTaxCredit&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cornflakes&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CUonStrike&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DontBuyKelloggs&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;EggoWaffles&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;feedly&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;FoxNews&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;gardenburgers&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;GOPCoup&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;HoldTheLine&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ITrustBernie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;KeepThoseElvesOnTheShelves&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;KelloggStrike&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;LaborSolidarity&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MAMA2021&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MutualAid4DrugDetox&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;NFT&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;NursesStrike&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;PayAttention&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;protectunions&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;RepublicansAreTheProblem&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Scrooged&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SocialistSundaySolidarity&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;stinking&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;sundayvibes&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;TagCorruption&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ToyotaUSA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Unionize&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;WholeFoods&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;yourcerealtasteslikeworkeroppression&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AbolishWork&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Assange&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;benefits&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BOYCOTT&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;boycottkelloggs&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BoycottTesla&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CancelStudentDebt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;cerealplants&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Content&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;crypto&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;DonnaWinters&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ebenezerskelloggs&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;fairpay&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;foodmanufacturing&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;FuckKelloggs&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;GodBless&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;HBOMax&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Intraday&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;kamalaharris&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;kelloggsstrike&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;kshamasawant&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;lol&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MorningStarIsKelloggs&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;NewProfilePic&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;NoWayHome&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;OurRevolution&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;pringles&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;RealityWinner&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;scablabor&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SmartNews&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;STARBUCKS&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Striking&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SupportWorkers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;tobaccoworkers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;UnionBUSTERS&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Unite&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;wealthgap&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;workplacewellbeing&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;AmericanJobs&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BattleCreek&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BillionaireClass&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BoycottGeneralMills&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BOYCOTTMZETxAPTxGMA279&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BuyKelloggs&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CEO&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ClimateCrisis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Corps&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DemExit&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DontCrossThePicketLine&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;EqualityforAll&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;FLOOD&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;frontlineworkers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;GeneralStrikeToSaveMankind&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;GreedyUnethicalKellogs&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;imwithtim&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;joinus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;kelloggnorthamerica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;KellogsStrike&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;lifeatk&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;moderndayslavery&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;neoliberalism&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;NoScabCereal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;OneMoreDay&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;politics&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;puzzle&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SamSeder&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ShopLocal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;staff&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;StrikeHard&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SupportThePeople&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;thepresident&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;TruthOut&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;UnionsMakeAmericaGreat&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;VegetariansUnite&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;workersrights&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Amazon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;bakery&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;BidenBoom&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;boycottcapitalism&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;BoycottKellogs&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;bullshit&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CatholicTeachers&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Christmas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;corporateGREED&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;DebtProtest&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;DontCrossPicketLines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;endstagecapitalism&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;fired&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;FreeAssange&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;GeneralStrikeRevolution&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greed&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;HumanRights&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;jobs&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;kelloggboycott&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kellogs&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;LeftWing&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MerryChristmas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;NationalLabourRelationsBoard&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;NoMoreCorporateGreed&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;OffBrands4Lyfe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;PhlEd&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Protests&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;rich&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SexWork&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SolidarityForever&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;strength&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;supporteachother&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;TeamGrapeNuts&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Trending&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;unionmemes&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vegan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;workers&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Accountability&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;assets&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bernie&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;boycott&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BOYCOTTKELLOGGS&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BoycottToyota&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CancelStudentLoans&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;cheesenips&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Contracts&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CSR&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;DonotGivAFuck&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Economics&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;FairPay&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;foodunion&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;FuckKellogs&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;GodBlessesOurMilitaryAndVets&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;headlines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Irony&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kashi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;KelloggsStrike&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Labor&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;M4A&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;mtleg&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;news&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;NowMadeWithScabs&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;patco&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pringles&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Replace&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ScabLabor&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;smore&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;starbucksunion&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;StrongerTogether&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;surveillanceadvertising&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;TonyTheTyrant&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;unionbusting&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;UnitedWeStand&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Website&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;WorldNews&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.120svys17vpkyz1bgdwsu1e14g30]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.120svys17vpkyz1bgdwsu1e14g30].[avg:followers:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.120svys17vpkyz1bgdwsu1e14g30].[avg:like_count:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.120svys17vpkyz1bgdwsu1e14g30].[max:like_count:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.120svys17vpkyz1bgdwsu1e14g30].[avg:retweet_count:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.120svys17vpkyz1bgdwsu1e14g30].[avg:tweet_count:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.120svys17vpkyz1bgdwsu1e14g30].[ctd:tweet_id (Hashtag_Tweet.csv):qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.120svys17vpkyz1bgdwsu1e14g30].[max:reply_count:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.120svys17vpkyz1bgdwsu1e14g30].[ctd:tweet_id (Mention_Tweet.csv):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.120svys17vpkyz1bgdwsu1e14g30].[avg:listed_count:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.120svys17vpkyz1bgdwsu1e14g30].[avg:reply_count:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.120svys17vpkyz1bgdwsu1e14g30].[ctd:tweet_id (URL_Tweet.csv):qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.120svys17vpkyz1bgdwsu1e14g30].[max:quote_count:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.120svys17vpkyz1bgdwsu1e14g30].[avg:following:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.120svys17vpkyz1bgdwsu1e14g30].[avg:quote_count:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.120svys17vpkyz1bgdwsu1e14g30].[max:retweet_count:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Hashtag_Tweet.csv' id='Hashtag_Tweet.csv_E669AD6B68C14CEC91298C5A3E1C3B9A'>
            <properties context=''>
              <relation connection='textscan.0gzjkwi0utf7691cpqh6z1psotdv' name='Hashtag_Tweet.csv' table='[Hashtag_Tweet#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA'>
                  <column datatype='integer' name='tweet_id' ordinal='0' />
                  <column datatype='string' name='hashtag' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Mention_Tweet.csv' id='Mention_Tweet.csv_B6A2E7E5FD0144E7807A99DEF07F7BF2'>
            <properties context=''>
              <relation connection='textscan.0gzjkwi0utf7691cpqh6z1psotdv' name='Mention_Tweet.csv' table='[Mention_Tweet#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA'>
                  <column datatype='integer' name='tweet_id' ordinal='0' />
                  <column datatype='integer' name='mentions' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Referenced_Tweet.csv' id='Referenced_Tweet.csv_E6EC76555CA0434FBF98FD9A5360B702'>
            <properties context=''>
              <relation connection='textscan.0gzjkwi0utf7691cpqh6z1psotdv' name='Referenced_Tweet.csv' table='[Referenced_Tweet#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='integer' name='tweet_id' ordinal='0' />
                  <column datatype='integer' name='referenced_tweet_id' ordinal='1' />
                  <column datatype='string' name='type' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Tweet.csv' id='Tweet.csv_E91B1F237CFC4BB1BCE0A8B538903DDD'>
            <properties context=''>
              <relation connection='textscan.0gzjkwi0utf7691cpqh6z1psotdv' name='Tweet.csv' table='[Tweet#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='integer' name='tweet_id' ordinal='0' />
                  <column datatype='integer' name='user_id' ordinal='1' />
                  <column datatype='datetime' date-parse-format='yyyy-MM-dd&apos;T&apos;HH:mm:ss.SSS&apos;Z&apos;' name='created_at' ordinal='2' />
                  <column datatype='string' name='text' ordinal='3' />
                  <column datatype='integer' name='like_count' ordinal='4' />
                  <column datatype='integer' name='quote_count' ordinal='5' />
                  <column datatype='integer' name='reply_count' ordinal='6' />
                  <column datatype='integer' name='retweet_count' ordinal='7' />
                  <column datatype='real' name='sentiment_score' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='URL_Tweet.csv' id='URL_Tweet.csv_FDD91E92735942359268AEC4E05CD536'>
            <properties context=''>
              <relation connection='textscan.0gzjkwi0utf7691cpqh6z1psotdv' name='URL_Tweet.csv' table='[URL_Tweet#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA'>
                  <column datatype='integer' name='tweet_id' ordinal='0' />
                  <column datatype='string' name='urls' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='User.csv' id='User.csv_FF1748E978A643EABEA3140515E181DD'>
            <properties context=''>
              <relation connection='textscan.0gzjkwi0utf7691cpqh6z1psotdv' name='User.csv' table='[User#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='integer' name='user_id' ordinal='0' />
                  <column datatype='integer' name='followers' ordinal='1' />
                  <column datatype='integer' name='following' ordinal='2' />
                  <column datatype='integer' name='tweet_count' ordinal='3' />
                  <column datatype='integer' name='listed_count' ordinal='4' />
                  <column datatype='boolean' name='verified' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[tweet_id]' />
              <expression op='[tweet_id (Hashtag_Tweet.csv)]' />
            </expression>
            <first-end-point object-id='Tweet.csv_E91B1F237CFC4BB1BCE0A8B538903DDD' />
            <second-end-point object-id='Hashtag_Tweet.csv_E669AD6B68C14CEC91298C5A3E1C3B9A' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[tweet_id]' />
              <expression op='[tweet_id (Mention_Tweet.csv)]' />
            </expression>
            <first-end-point object-id='Tweet.csv_E91B1F237CFC4BB1BCE0A8B538903DDD' />
            <second-end-point object-id='Mention_Tweet.csv_B6A2E7E5FD0144E7807A99DEF07F7BF2' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[tweet_id]' />
              <expression op='[tweet_id (Referenced_Tweet.csv)]' />
            </expression>
            <first-end-point object-id='Tweet.csv_E91B1F237CFC4BB1BCE0A8B538903DDD' />
            <second-end-point object-id='Referenced_Tweet.csv_E6EC76555CA0434FBF98FD9A5360B702' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[tweet_id]' />
              <expression op='[tweet_id (URL_Tweet.csv)]' />
            </expression>
            <first-end-point object-id='Tweet.csv_E91B1F237CFC4BB1BCE0A8B538903DDD' />
            <second-end-point object-id='URL_Tweet.csv_FDD91E92735942359268AEC4E05CD536' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[user_id]' />
              <expression op='[user_id (User.csv)]' />
            </expression>
            <first-end-point object-id='Tweet.csv_E91B1F237CFC4BB1BCE0A8B538903DDD' />
            <second-end-point object-id='User.csv_FF1748E978A643EABEA3140515E181DD' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='How many tweets contain...'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='9'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Tweet+' name='federated.120svys17vpkyz1bgdwsu1e14g30' />
          </datasources>
          <datasource-dependencies datasource='federated.120svys17vpkyz1bgdwsu1e14g30'>
            <column datatype='integer' name='[Sentiment Score (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='-2' formula='[sentiment_score]' peg='0' size='0.06' />
            </column>
            <column-instance column='[tweet_id (Hashtag_Tweet.csv)]' derivation='CountD' name='[ctd:tweet_id (Hashtag_Tweet.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[tweet_id (Mention_Tweet.csv)]' derivation='CountD' name='[ctd:tweet_id (Mention_Tweet.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[tweet_id (URL_Tweet.csv)]' derivation='CountD' name='[ctd:tweet_id (URL_Tweet.csv):qk]' pivot='key' type='quantitative' />
            <column caption='Hashtag' datatype='string' name='[hashtag]' role='dimension' type='nominal' />
            <column-instance column='[Sentiment Score (bin)]' derivation='None' name='[none:Sentiment Score (bin):qk]' pivot='key' type='quantitative' />
            <column-instance column='[hashtag]' derivation='None' name='[none:hashtag:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column caption='Sentiment Score' datatype='real' name='[sentiment_score]' role='measure' type='quantitative' />
            <column caption='tweet id (Hashtag Tweet.csv)' datatype='integer' name='[tweet_id (Hashtag_Tweet.csv)]' role='dimension' type='ordinal' />
            <column caption='tweet id (Mention Tweet.csv)' datatype='integer' name='[tweet_id (Mention_Tweet.csv)]' role='dimension' type='ordinal' />
            <column caption='tweet id (URL Tweet.csv)' datatype='integer' name='[tweet_id (URL_Tweet.csv)]' role='dimension' type='ordinal' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.120svys17vpkyz1bgdwsu1e14g30].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.120svys17vpkyz1bgdwsu1e14g30].[ctd:tweet_id (Hashtag_Tweet.csv):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.120svys17vpkyz1bgdwsu1e14g30].[ctd:tweet_id (Mention_Tweet.csv):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.120svys17vpkyz1bgdwsu1e14g30].[ctd:tweet_id (URL_Tweet.csv):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.120svys17vpkyz1bgdwsu1e14g30].[none:Sentiment Score (bin):qk]' filter-group='5' included-values='in-range'>
            <min>-17</min>
            <max>16</max>
          </filter>
          <filter class='categorical' column='[federated.120svys17vpkyz1bgdwsu1e14g30].[none:hashtag:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:hashtag:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.120svys17vpkyz1bgdwsu1e14g30].[none:type:nk]' filter-group='4'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:type:nk]' member='%null%' />
              <groupfilter function='member' level='[none:type:nk]' member='&quot;quoted&quot;' />
              <groupfilter function='member' level='[none:type:nk]' member='&quot;replied_to&quot;' />
              <groupfilter function='member' level='[none:type:nk]' member='&quot;retweeted&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.120svys17vpkyz1bgdwsu1e14g30].[:Measure Names]</column>
            <column>[federated.120svys17vpkyz1bgdwsu1e14g30].[none:type:nk]</column>
            <column>[federated.120svys17vpkyz1bgdwsu1e14g30].[none:hashtag:nk]</column>
            <column>[federated.120svys17vpkyz1bgdwsu1e14g30].[none:Sentiment Score (bin):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.120svys17vpkyz1bgdwsu1e14g30].[Multiple Values]' value='52' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.120svys17vpkyz1bgdwsu1e14g30].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.120svys17vpkyz1bgdwsu1e14g30].[Multiple Values]</rows>
        <cols>[federated.120svys17vpkyz1bgdwsu1e14g30].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{14867E6B-996B-4A14-A463-3C74053AAB2C}' />
    </worksheet>
    <worksheet name='Number of tweets by the hour'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='9'>Tweet volume and sentiment over time</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Tweet+' name='federated.120svys17vpkyz1bgdwsu1e14g30' />
          </datasources>
          <datasource-dependencies datasource='federated.120svys17vpkyz1bgdwsu1e14g30'>
            <column datatype='integer' name='[Sentiment Score (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='-2' formula='[sentiment_score]' peg='0' size='0.06' />
            </column>
            <column caption='Created At' datatype='datetime' name='[created_at]' role='dimension' type='ordinal' />
            <column-instance column='[tweet_id]' derivation='CountD' name='[ctd:tweet_id:qk]' pivot='key' type='quantitative' />
            <column caption='Hashtag' datatype='string' name='[hashtag]' role='dimension' type='nominal' />
            <column-instance column='[created_at]' derivation='Hour' name='[hr:created_at:ok]' pivot='key' type='ordinal' />
            <column-instance column='[sentiment_score]' derivation='Median' name='[med:sentiment_score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sentiment Score (bin)]' derivation='None' name='[none:Sentiment Score (bin):qk]' pivot='key' type='quantitative' />
            <column-instance column='[hashtag]' derivation='None' name='[none:hashtag:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column caption='Sentiment Score' datatype='real' name='[sentiment_score]' role='measure' type='quantitative' />
            <column-instance column='[created_at]' derivation='Hour-Trunc' name='[thr:created_at:qk]' pivot='key' type='quantitative' />
            <column caption='Tweet Id' datatype='integer' name='[tweet_id]' role='dimension' type='ordinal' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.120svys17vpkyz1bgdwsu1e14g30].[hr:created_at:ok]'>
            <groupfilter from='0' function='range' level='[hr:created_at:ok]' to='23' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.120svys17vpkyz1bgdwsu1e14g30].[none:Sentiment Score (bin):qk]' filter-group='5' included-values='in-range'>
            <min>-17</min>
            <max>16</max>
          </filter>
          <filter class='categorical' column='[federated.120svys17vpkyz1bgdwsu1e14g30].[none:hashtag:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:hashtag:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.120svys17vpkyz1bgdwsu1e14g30].[none:type:nk]' filter-group='4'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:type:nk]' member='%null%' />
              <groupfilter function='member' level='[none:type:nk]' member='&quot;quoted&quot;' />
              <groupfilter function='member' level='[none:type:nk]' member='&quot;replied_to&quot;' />
              <groupfilter function='member' level='[none:type:nk]' member='&quot;retweeted&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.120svys17vpkyz1bgdwsu1e14g30].[hr:created_at:ok]</column>
            <column>[federated.120svys17vpkyz1bgdwsu1e14g30].[none:hashtag:nk]</column>
            <column>[federated.120svys17vpkyz1bgdwsu1e14g30].[none:type:nk]</column>
            <column>[federated.120svys17vpkyz1bgdwsu1e14g30].[none:Sentiment Score (bin):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.120svys17vpkyz1bgdwsu1e14g30].[ctd:tweet_id:qk]' value='56' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.120svys17vpkyz1bgdwsu1e14g30].[ctd:tweet_id:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#edd8e0</color>
                <color>#e9c0d0</color>
                <color>#e5a9c0</color>
                <color>#e193b1</color>
                <color>#de7da2</color>
                <color>#da6894</color>
                <color>#d65486</color>
                <color>#d24078</color>
                <color>#ce2d6b</color>
                <color>#cb1b5f</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.120svys17vpkyz1bgdwsu1e14g30].[med:sentiment_score:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.120svys17vpkyz1bgdwsu1e14g30].[ctd:tweet_id:qk]</rows>
        <cols>[federated.120svys17vpkyz1bgdwsu1e14g30].[thr:created_at:qk]</cols>
      </table>
      <simple-id uuid='{80D62586-75FF-4A80-BE6E-308D08AE115C}' />
    </worksheet>
    <worksheet name='Popular hashtags'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='9'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Tweet+' name='federated.120svys17vpkyz1bgdwsu1e14g30' />
          </datasources>
          <datasource-dependencies datasource='federated.120svys17vpkyz1bgdwsu1e14g30'>
            <_.fcp.ObjectModelTableType.false...column caption='Hashtag_Tweet.csv' datatype='integer' name='[__tableau_internal_object_id__].[Hashtag_Tweet.csv_E669AD6B68C14CEC91298C5A3E1C3B9A]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Sentiment Score (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='-2' formula='[sentiment_score]' peg='0' size='0.06' />
            </column>
            <_.fcp.ObjectModelTableType.true...column caption='Hashtag_Tweet.csv' datatype='table' name='[__tableau_internal_object_id__].[Hashtag_Tweet.csv_E669AD6B68C14CEC91298C5A3E1C3B9A]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Hashtag_Tweet.csv_E669AD6B68C14CEC91298C5A3E1C3B9A]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Hashtag_Tweet.csv_E669AD6B68C14CEC91298C5A3E1C3B9A:qk]' pivot='key' type='quantitative' />
            <column caption='Hashtag' datatype='string' name='[hashtag]' role='dimension' type='nominal' />
            <column-instance column='[Sentiment Score (bin)]' derivation='None' name='[none:Sentiment Score (bin):qk]' pivot='key' type='quantitative' />
            <column-instance column='[hashtag]' derivation='None' name='[none:hashtag:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column caption='Sentiment Score' datatype='real' name='[sentiment_score]' role='measure' type='quantitative' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.120svys17vpkyz1bgdwsu1e14g30].[__tableau_internal_object_id__].[cnt:Hashtag_Tweet.csv_E669AD6B68C14CEC91298C5A3E1C3B9A:qk]' included-values='in-range'>
            <min>1</min>
            <max>3542</max>
          </filter>
          <filter class='quantitative' column='[federated.120svys17vpkyz1bgdwsu1e14g30].[none:Sentiment Score (bin):qk]' filter-group='5' included-values='in-range'>
            <min>-17</min>
            <max>16</max>
          </filter>
          <filter class='categorical' column='[federated.120svys17vpkyz1bgdwsu1e14g30].[none:hashtag:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:hashtag:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.120svys17vpkyz1bgdwsu1e14g30].[none:type:nk]' filter-group='4'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:type:nk]' member='%null%' />
              <groupfilter function='member' level='[none:type:nk]' member='&quot;quoted&quot;' />
              <groupfilter function='member' level='[none:type:nk]' member='&quot;replied_to&quot;' />
              <groupfilter function='member' level='[none:type:nk]' member='&quot;retweeted&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.120svys17vpkyz1bgdwsu1e14g30].[none:hashtag:nk]</column>
            <column>[federated.120svys17vpkyz1bgdwsu1e14g30].[__tableau_internal_object_id__].[cnt:Hashtag_Tweet.csv_E669AD6B68C14CEC91298C5A3E1C3B9A:qk]</column>
            <column>[federated.120svys17vpkyz1bgdwsu1e14g30].[none:type:nk]</column>
            <column>[federated.120svys17vpkyz1bgdwsu1e14g30].[none:Sentiment Score (bin):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.120svys17vpkyz1bgdwsu1e14g30].[__tableau_internal_object_id__].[cnt:Hashtag_Tweet.csv_E669AD6B68C14CEC91298C5A3E1C3B9A:qk]' value='Hashtag frequency&#10;'>
              <formatted-text>
                <run>Hashtag frequency&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.120svys17vpkyz1bgdwsu1e14g30].[none:hashtag:nk]' />
              <size column='[federated.120svys17vpkyz1bgdwsu1e14g30].[__tableau_internal_object_id__].[cnt:Hashtag_Tweet.csv_E669AD6B68C14CEC91298C5A3E1C3B9A:qk]' />
              <text column='[federated.120svys17vpkyz1bgdwsu1e14g30].[none:hashtag:nk]' />
              <text column='[federated.120svys17vpkyz1bgdwsu1e14g30].[__tableau_internal_object_id__].[cnt:Hashtag_Tweet.csv_E669AD6B68C14CEC91298C5A3E1C3B9A:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{95093B26-445B-455F-BDC2-8EA025D03268}' />
    </worksheet>
    <worksheet name='Public metrics overview'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='9'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Tweet+' name='federated.120svys17vpkyz1bgdwsu1e14g30' />
          </datasources>
          <datasource-dependencies datasource='federated.120svys17vpkyz1bgdwsu1e14g30'>
            <column datatype='integer' name='[Sentiment Score (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='-2' formula='[sentiment_score]' peg='0' size='0.06' />
            </column>
            <column-instance column='[like_count]' derivation='Avg' name='[avg:like_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[quote_count]' derivation='Avg' name='[avg:quote_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[reply_count]' derivation='Avg' name='[avg:reply_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[retweet_count]' derivation='Avg' name='[avg:retweet_count:qk]' pivot='key' type='quantitative' />
            <column caption='Hashtag' datatype='string' name='[hashtag]' role='dimension' type='nominal' />
            <column caption='Like Count' datatype='integer' name='[like_count]' role='measure' type='quantitative' />
            <column-instance column='[like_count]' derivation='Max' name='[max:like_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[quote_count]' derivation='Max' name='[max:quote_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[reply_count]' derivation='Max' name='[max:reply_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[retweet_count]' derivation='Max' name='[max:retweet_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sentiment Score (bin)]' derivation='None' name='[none:Sentiment Score (bin):qk]' pivot='key' type='quantitative' />
            <column-instance column='[hashtag]' derivation='None' name='[none:hashtag:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column caption='Quote Count' datatype='integer' name='[quote_count]' role='measure' type='quantitative' />
            <column caption='Reply Count' datatype='integer' name='[reply_count]' role='measure' type='quantitative' />
            <column caption='Retweet Count' datatype='integer' name='[retweet_count]' role='measure' type='quantitative' />
            <column caption='Sentiment Score' datatype='real' name='[sentiment_score]' role='measure' type='quantitative' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.120svys17vpkyz1bgdwsu1e14g30].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.120svys17vpkyz1bgdwsu1e14g30].[avg:like_count:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.120svys17vpkyz1bgdwsu1e14g30].[avg:quote_count:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.120svys17vpkyz1bgdwsu1e14g30].[avg:reply_count:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.120svys17vpkyz1bgdwsu1e14g30].[avg:retweet_count:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.120svys17vpkyz1bgdwsu1e14g30].[max:like_count:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.120svys17vpkyz1bgdwsu1e14g30].[max:quote_count:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.120svys17vpkyz1bgdwsu1e14g30].[max:reply_count:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.120svys17vpkyz1bgdwsu1e14g30].[max:retweet_count:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.120svys17vpkyz1bgdwsu1e14g30].[none:Sentiment Score (bin):qk]' filter-group='5' included-values='in-range'>
            <min>-17</min>
            <max>16</max>
          </filter>
          <filter class='categorical' column='[federated.120svys17vpkyz1bgdwsu1e14g30].[none:hashtag:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:hashtag:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.120svys17vpkyz1bgdwsu1e14g30].[none:type:nk]' filter-group='4'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:type:nk]' member='%null%' />
              <groupfilter function='member' level='[none:type:nk]' member='&quot;quoted&quot;' />
              <groupfilter function='member' level='[none:type:nk]' member='&quot;replied_to&quot;' />
              <groupfilter function='member' level='[none:type:nk]' member='&quot;retweeted&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.120svys17vpkyz1bgdwsu1e14g30].[:Measure Names]</column>
            <column>[federated.120svys17vpkyz1bgdwsu1e14g30].[none:hashtag:nk]</column>
            <column>[federated.120svys17vpkyz1bgdwsu1e14g30].[none:type:nk]</column>
            <column>[federated.120svys17vpkyz1bgdwsu1e14g30].[none:Sentiment Score (bin):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='68' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.120svys17vpkyz1bgdwsu1e14g30].[:Measure Names]' value='188' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.120svys17vpkyz1bgdwsu1e14g30].[:Measure Names]' />
              <text column='[federated.120svys17vpkyz1bgdwsu1e14g30].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.120svys17vpkyz1bgdwsu1e14g30].[:Measure Names]</rows>
        <cols />
      </table>
      <simple-id uuid='{8C350C4C-7BA6-4195-82B0-84EF6D301050}' />
    </worksheet>
    <worksheet name='Sentiment dstribution'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='9'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Tweet+' name='federated.120svys17vpkyz1bgdwsu1e14g30' />
          </datasources>
          <datasource-dependencies datasource='federated.120svys17vpkyz1bgdwsu1e14g30'>
            <column datatype='integer' name='[Sentiment Score (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='-2' formula='[sentiment_score]' peg='0' size='0.06' />
            </column>
            <column-instance column='[sentiment_score]' derivation='Count' name='[cnt:sentiment_score:qk]' pivot='key' type='quantitative' />
            <column caption='Hashtag' datatype='string' name='[hashtag]' role='dimension' type='nominal' />
            <column-instance column='[Sentiment Score (bin)]' derivation='None' name='[none:Sentiment Score (bin):qk]' pivot='key' type='quantitative' />
            <column-instance column='[hashtag]' derivation='None' name='[none:hashtag:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column caption='Sentiment Score' datatype='real' name='[sentiment_score]' role='measure' type='quantitative' />
            <column-instance column='[sentiment_score]' derivation='Sum' name='[sum:sentiment_score:qk]' pivot='key' type='quantitative' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.120svys17vpkyz1bgdwsu1e14g30].[none:Sentiment Score (bin):qk]' filter-group='5' included-values='in-range'>
            <min>-17</min>
            <max>16</max>
          </filter>
          <filter class='categorical' column='[federated.120svys17vpkyz1bgdwsu1e14g30].[none:hashtag:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:hashtag:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.120svys17vpkyz1bgdwsu1e14g30].[none:type:nk]' filter-group='4'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:type:nk]' member='%null%' />
              <groupfilter function='member' level='[none:type:nk]' member='&quot;quoted&quot;' />
              <groupfilter function='member' level='[none:type:nk]' member='&quot;replied_to&quot;' />
              <groupfilter function='member' level='[none:type:nk]' member='&quot;retweeted&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.120svys17vpkyz1bgdwsu1e14g30].[none:Sentiment Score (bin):qk]</column>
            <column>[federated.120svys17vpkyz1bgdwsu1e14g30].[none:hashtag:nk]</column>
            <column>[federated.120svys17vpkyz1bgdwsu1e14g30].[none:type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.120svys17vpkyz1bgdwsu1e14g30].[cnt:sentiment_score:qk]' scope='rows' value='Number of tweets' />
            <format attr='width' field='[federated.120svys17vpkyz1bgdwsu1e14g30].[cnt:sentiment_score:qk]' value='48' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.120svys17vpkyz1bgdwsu1e14g30].[sum:sentiment_score:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.120svys17vpkyz1bgdwsu1e14g30].[cnt:sentiment_score:qk]</rows>
        <cols>[federated.120svys17vpkyz1bgdwsu1e14g30].[none:Sentiment Score (bin):qk]</cols>
        <show-full-range>
          <column>[federated.120svys17vpkyz1bgdwsu1e14g30].[Sentiment Score (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{534A7F58-652C-49D2-BE0A-A9BD5A71E0F2}' />
    </worksheet>
    <worksheet name='The average profile'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='9'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Tweet+' name='federated.120svys17vpkyz1bgdwsu1e14g30' />
          </datasources>
          <datasource-dependencies datasource='federated.120svys17vpkyz1bgdwsu1e14g30'>
            <column-instance column='[followers]' derivation='Avg' name='[avg:followers:qk]' pivot='key' type='quantitative' />
            <column-instance column='[following]' derivation='Avg' name='[avg:following:qk]' pivot='key' type='quantitative' />
            <column-instance column='[listed_count]' derivation='Avg' name='[avg:listed_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tweet_count]' derivation='Avg' name='[avg:tweet_count:qk]' pivot='key' type='quantitative' />
            <column caption='Followers' datatype='integer' name='[followers]' role='measure' type='quantitative' />
            <column caption='Following' datatype='integer' name='[following]' role='measure' type='quantitative' />
            <column caption='Listed Count' datatype='integer' name='[listed_count]' role='measure' type='quantitative' />
            <column-instance column='[verified]' derivation='None' name='[none:verified:nk]' pivot='key' type='nominal' />
            <column caption='Tweet Count' datatype='integer' name='[tweet_count]' role='measure' type='quantitative' />
            <column caption='Verified' datatype='boolean' name='[verified]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.120svys17vpkyz1bgdwsu1e14g30].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.120svys17vpkyz1bgdwsu1e14g30].[avg:followers:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.120svys17vpkyz1bgdwsu1e14g30].[avg:following:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.120svys17vpkyz1bgdwsu1e14g30].[avg:listed_count:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.120svys17vpkyz1bgdwsu1e14g30].[avg:tweet_count:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.120svys17vpkyz1bgdwsu1e14g30].[none:verified:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:verified:nk]' member='false' />
              <groupfilter function='member' level='[none:verified:nk]' member='true' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.120svys17vpkyz1bgdwsu1e14g30].[:Measure Names]</column>
            <column>[federated.120svys17vpkyz1bgdwsu1e14g30].[none:verified:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.120svys17vpkyz1bgdwsu1e14g30].[Multiple Values]' value='11' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.120svys17vpkyz1bgdwsu1e14g30].[:Measure Names]' value='35' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.120svys17vpkyz1bgdwsu1e14g30].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.120svys17vpkyz1bgdwsu1e14g30].[:Measure Names]</rows>
        <cols>[federated.120svys17vpkyz1bgdwsu1e14g30].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{1DFB6627-344B-42EA-88FF-D87E53565FDC}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1600' minheight='800' minwidth='1600' sizing-mode='fixed' />
      <datasources>
        <datasource caption='Tweet+' name='federated.120svys17vpkyz1bgdwsu1e14g30' />
      </datasources>
      <datasource-dependencies datasource='federated.120svys17vpkyz1bgdwsu1e14g30'>
        <column datatype='integer' name='[Sentiment Score (bin)]' role='dimension' type='quantitative'>
          <calculation class='bin' decimals='-2' formula='[sentiment_score]' peg='0' size='0.06' />
        </column>
        <column caption='Hashtag_Tweet.csv' datatype='table' name='[__tableau_internal_object_id__].[Hashtag_Tweet.csv_E669AD6B68C14CEC91298C5A3E1C3B9A]' role='measure' type='quantitative' />
        <column-instance column='[__tableau_internal_object_id__].[Hashtag_Tweet.csv_E669AD6B68C14CEC91298C5A3E1C3B9A]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Hashtag_Tweet.csv_E669AD6B68C14CEC91298C5A3E1C3B9A:qk]' pivot='key' type='quantitative' />
        <column caption='Created At' datatype='datetime' name='[created_at]' role='dimension' type='ordinal' />
        <column caption='Hashtag' datatype='string' name='[hashtag]' role='dimension' type='nominal' />
        <column-instance column='[created_at]' derivation='Hour' name='[hr:created_at:ok]' pivot='key' type='ordinal' />
        <column-instance column='[Sentiment Score (bin)]' derivation='None' name='[none:Sentiment Score (bin):qk]' pivot='key' type='quantitative' />
        <column-instance column='[hashtag]' derivation='None' name='[none:hashtag:nk]' pivot='key' type='nominal' />
        <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
        <column-instance column='[verified]' derivation='None' name='[none:verified:nk]' pivot='key' type='nominal' />
        <column caption='Sentiment Score' datatype='real' name='[sentiment_score]' role='measure' type='quantitative' />
        <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
        <column caption='Verified' datatype='boolean' name='[verified]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='17' param='horz' type-v2='layout-flow' w='99000' x='500' y='1000'>
            <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='89000' x='500' y='1000'>
              <zone h='98000' id='5' type-v2='layout-basic' w='89000' x='500' y='1000'>
                <zone h='74000' id='3' name='Popular hashtags' w='46625' x='500' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='54625' id='9' name='Number of tweets by the hour' w='24680' x='64820' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='54625' id='13' name='How many tweets contain...' w='17695' x='47125' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='24000' id='14' name='The average profile' w='46625' x='500' y='75000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='43375' id='15' name='Sentiment dstribution' w='42375' x='47125' y='55625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='16' is-fixed='true' param='vert' type-v2='layout-flow' w='10000' x='89500' y='1000'>
              <zone h='8750' id='26' mode='checkdropdown' name='Number of tweets by the hour' param='[federated.120svys17vpkyz1bgdwsu1e14g30].[hr:created_at:ok]' type-v2='filter' values='database' w='10000' x='89500' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8750' id='18' mode='checkdropdown' name='Popular hashtags' param='[federated.120svys17vpkyz1bgdwsu1e14g30].[none:hashtag:nk]' type-v2='filter' values='database' w='10000' x='89500' y='9750'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='21875' id='20' name='How many tweets contain...' param='[federated.120svys17vpkyz1bgdwsu1e14g30].[none:type:nk]' type-v2='filter' values='database' w='10000' x='89500' y='18500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='15125' id='23' name='The average profile' param='[federated.120svys17vpkyz1bgdwsu1e14g30].[none:verified:nk]' type-v2='filter' values='database' w='10000' x='89500' y='40375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='12125' id='19' name='Popular hashtags' param='[federated.120svys17vpkyz1bgdwsu1e14g30].[__tableau_internal_object_id__].[cnt:Hashtag_Tweet.csv_E669AD6B68C14CEC91298C5A3E1C3B9A:qk]' type-v2='filter' values='database' w='18313' x='25313' y='7875' />
        <zone h='9625' id='21' name='Sentiment dstribution' param='[federated.120svys17vpkyz1bgdwsu1e14g30].[none:Sentiment Score (bin):qk]' type-v2='filter' values='database' w='14938' x='68688' y='62500' />
        <zone h='3000' id='22' type-v2='dashboard-object' w='1500' x='89500' y='55625'>
          <button action=''>
            <toggle-action>tabdoc:toggle-button-click-action window-id=&quot;{1CB25FA4-D92E-43DD-BD05-150DCB54884C}&quot; zone-id=&quot;22&quot; zone-ids=[15]</toggle-action>
            <button-visual-state />
            <button-visual-state />
          </button>
        </zone>
        <zone h='30625' id='11' name='Public metrics overview' w='16563' x='27563' y='61500' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2000' minheight='2000' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='30' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='29' param='vert' type-v2='layout-flow' w='99000' x='500' y='1000'>
                <zone h='8750' id='18' mode='checkdropdown' name='Popular hashtags' param='[federated.120svys17vpkyz1bgdwsu1e14g30].[none:hashtag:nk]' type-v2='filter' values='database' w='10000' x='89500' y='9750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='12125' id='19' name='Popular hashtags' param='[federated.120svys17vpkyz1bgdwsu1e14g30].[__tableau_internal_object_id__].[cnt:Hashtag_Tweet.csv_E669AD6B68C14CEC91298C5A3E1C3B9A:qk]' type-v2='filter' values='database' w='18313' x='25313' y='7875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='74000' id='3' is-fixed='true' name='Popular hashtags' w='46625' x='500' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='21875' id='20' mode='checkdropdown' name='How many tweets contain...' param='[federated.120svys17vpkyz1bgdwsu1e14g30].[none:type:nk]' type-v2='filter' values='database' w='10000' x='89500' y='18500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='54625' id='13' is-fixed='true' name='How many tweets contain...' w='17695' x='47125' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8750' id='26' mode='checkdropdown' name='Number of tweets by the hour' param='[federated.120svys17vpkyz1bgdwsu1e14g30].[hr:created_at:ok]' type-v2='filter' values='database' w='10000' x='89500' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='54625' id='9' is-fixed='true' name='Number of tweets by the hour' w='24680' x='64820' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9625' id='21' name='Sentiment dstribution' param='[federated.120svys17vpkyz1bgdwsu1e14g30].[none:Sentiment Score (bin):qk]' type-v2='filter' values='database' w='14938' x='68688' y='62500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43375' id='15' is-fixed='true' name='Sentiment dstribution' w='42375' x='47125' y='55625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='245' h='30625' id='11' is-fixed='true' name='Public metrics overview' w='16563' x='27563' y='61500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='15125' id='23' mode='checkdropdown' name='The average profile' param='[federated.120svys17vpkyz1bgdwsu1e14g30].[none:verified:nk]' type-v2='filter' values='database' w='10000' x='89500' y='40375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='184' h='24000' id='14' is-fixed='true' name='The average profile' w='46625' x='500' y='75000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{EAB123CB-E311-4067-ADE2-9CF65C7C2820}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' show-side-pane='false' source-height='44'>
    <window class='worksheet' name='Popular hashtags'>
      <cards>
        <edge name='left'>
          <strip size='216'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.120svys17vpkyz1bgdwsu1e14g30].[none:hashtag:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8AA3BBC1-F22B-42FB-88F4-4FF9D3545BDF}' />
    </window>
    <window class='worksheet' name='Number of tweets by the hour'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.120svys17vpkyz1bgdwsu1e14g30].[med:sentiment_score:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.120svys17vpkyz1bgdwsu1e14g30].[hr:created_at:ok]</field>
            <field>[federated.120svys17vpkyz1bgdwsu1e14g30].[med:sentiment_score:qk]</field>
            <field>[federated.120svys17vpkyz1bgdwsu1e14g30].[none:created_at:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{25353A2B-DE31-4793-A9A6-D0E2E7811096}' />
    </window>
    <window class='worksheet' name='Public metrics overview'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.120svys17vpkyz1bgdwsu1e14g30].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.120svys17vpkyz1bgdwsu1e14g30].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C187735D-37AB-4519-AB68-0CC3F5295FA8}' />
    </window>
    <window class='worksheet' name='How many tweets contain...'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.120svys17vpkyz1bgdwsu1e14g30].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.120svys17vpkyz1bgdwsu1e14g30].[:Measure Names]</field>
            <field>[federated.120svys17vpkyz1bgdwsu1e14g30].[none:tweet_id (Hashtag_Tweet.csv):ok]</field>
            <field>[federated.120svys17vpkyz1bgdwsu1e14g30].[none:tweet_id (Mention_Tweet.csv):ok]</field>
            <field>[federated.120svys17vpkyz1bgdwsu1e14g30].[none:tweet_id (URL_Tweet.csv):ok]</field>
            <field>[federated.120svys17vpkyz1bgdwsu1e14g30].[none:type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B7ED0C1D-FFD7-4B89-9F2D-A5130C1D0138}' />
    </window>
    <window class='worksheet' name='The average profile'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.120svys17vpkyz1bgdwsu1e14g30].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.120svys17vpkyz1bgdwsu1e14g30].[:Measure Names]</field>
            <field>[federated.120svys17vpkyz1bgdwsu1e14g30].[none:verified:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CF7ADE01-2358-476C-987F-DC9A97CFEFFB}' />
    </window>
    <window class='worksheet' name='Sentiment dstribution'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.120svys17vpkyz1bgdwsu1e14g30].[sum:sentiment_score:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.120svys17vpkyz1bgdwsu1e14g30].[none:Sentiment Score (bin):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{344CE991-49C1-4E97-8056-F790A94E9470}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='How many tweets contain...'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Number of tweets by the hour'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Popular hashtags' />
        <viewpoint name='Public metrics overview' />
        <viewpoint name='Sentiment dstribution'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='The average profile' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{1CB25FA4-D92E-43DD-BD05-150DCB54884C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='How many tweets contain...' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAWE0lEQVR4nO3dW2xU953A8e+Zc+bqmfGM73c7GDA2LoSbTTAYQiBkQ9ItS6g2XalV21RJ
      pVVV9aVSVeVhK7V92LYPVEq3qbRaRau26iWlodA0QAyUO8EGBxswBgwYA7axPfaM53Iu+wAY
      Bidpth6K8fl9nuCcmeP/jM93zv/MWHMUy7IshLAhRVEUx6MehBCPkgQgbE0CELYmAQhbkwCE
      rT32ARiGgWmaj3oY4jH12AdgmqYEIP5uj30AQkyFBCBsTQIQtiYBCFuTAIStSQDC1iQAYWsS
      gLA1CUDYmgQgbE0CELYmAQhb0zK/ySQf/vmXHInksaL5GWqLPABY0X4+OLiHY+dvpd268DNr
      Wd9QQ8CVoLfzDP1GDvPqy/HcWW+OXqZl11mK16yiNuxBiEzKbACWSfLyQXadc5Od3c1gdPXd
      FSSiw/SOWixsfoG5hd57A/D48WkABmOD/dxMOZlz5z6WEeH0oQNcdsxmic+Z0aEKARkNwEIf
      6+Evuy6yeP0zjJ74Q9ra8dgoKB6KSkrJC//tmZdl6vR1nOBEv5en1s8n6FYzN1Qh7sjcOYA+
      RvfxkwxVLWVRkSt9nWUwHhvFMkP4vJ/uRyaGezh56gql9cuozPOhZGygQtyToSOASeRaFx2D
      GktXzcLpGEtfbRnER29y/sMebo724FYUvKES5i1cxLyKXFyTmkhy7kgLkfxGNtSW4JFTdfGQ
      ZCQAc3yEM2cu4ilfSFWeD8YeCEBxUjp/LS8XRzEAy0oxcu0ire++TV/Ds6xeWHFnJx+i9d0W
      Dh9woTqr2fzvtWS70l/7dV0nlUql/3zTJJFIZOKhCJuZcgCWZXHjwlEuDAZZtXIWHlVh0q6o
      OHD7cyn1507ch4oqSkP7+NXRVmor86nIAQixaMPLrGgu5shb/0N721UqGirxOe9FoKoqqnrv
      fEDXdRRFSVsmxKeVgSPAMCd2H+R6zlP0nDzCZUAfj3DlxjCDHx5HjVezpKYUl3ZvHqMoCqAS
      zsnDyzARXQdUQAEUFDWH5c+v589/3M2R0Is01RZMTJNu33eyj1suxCfJwOzaoqR2JfMLVaJj
      Y4yNjRGNxkimDBLjUcbiSUzDYOTWLVJp30JqMhoZwXK5CDgnv8Xpy5nDskXlXD11lAsDY5jy
      DabiIZjyEUBRcli0fn3asvjIDYzIFbKXrWZltR89PsaJll9zxb+UVQ31FAXdjN04w/t7T5E1
      exU5fhcQT9+u5qK0fim1N/7E+y2tFP/zCrLlrVCRYQ/hk2BQHA68WQHcd6Y9qtvHkvWb8Lce
      5Z3/3sNANIUru5zFTf/EM/UV+DUHoKC5PXhU5523PBVUd5hFa55m5HfvcqCrlufq8+RvN0RG
      KY/716OnUikURUHTHkrLYgaTr0cXticvm9NQX18fr7/+OnV1dXz5y18mFAoBEI/HaWlpYdu2
      bfT391NQUMDmzZtZuXIlbrc7bRuWZdHW1saPf/xjotFo2rqqqiq++c1vUlpaSmdnJ2+//Tad
      nZ0kk0nKy8t56aWXaGxsnHRUNU2TN998k9bWVr72ta+xZMmSh/tE/ANIANOMruu89dZbjIyM
      cPbs2YkP+IaGhvjRj37E8PAwW7ZsoaysjM7OTt58800ikQgvvvjipB22pqaG733vexNfHanr
      Ojt37uTMmTOoqkokEuGtt96iurqaTZs24XK5OHLkCD/5yU945ZVXWL9+/cTnK5Zl0dXVxTvv
      vIPX66Wvr+8f+8Q8JBLANGKaJvv27aO7u5uXX36Z9957b2KdoiisW7eOhoYGfD4fANXV1QwM
      DHDixAnWrVtHIBBIu73P56Oqqmpi2c2bN+nt7WX16tUUFhaiqirf//730z5ErKqqYnR0lNbW
      Vpqamia2OTQ0xNatW/nCF77A0aNHH/Iz8Y8j5wDTSG9vLzt37mTLli1pOzNAKBRizZo1Ezs/
      3P5m7Hg8jqZpn+qDwPb2doaGhmhoaJi4z4OfoMfjcSKRCH6/f2JdMplkx44dhMNhVq5cmYFH
      On1IANNEIpGgpaWFvLy8TzW3TqVS7Nq1i+PHj9PU1ITX6/3E29+d/ixbtozy8vJJ6w3DoLu7
      m61bt9Lf38+aNWvweDxYlsX58+dpa2vjs5/97KRzjcedBDANWJZFd3c37e3trF27lmAw+Im3
      T6VS/PznP+enP/0pGzdupKmpCYfjk3+V586d4/z58zz77LM47/vkfWRkhB/84AcsX76czZs3
      E41GefXVV6mtrcXhcBCNRtmzZw+zZ8+mrq4uI493OpEApoFYLMbvf/975syZw8KFCz92Z9Z1
      nc7OTr7+9a9z8OBB3njjDTZv3ozH4/nEKdD4+DhvvPEGGzdupLKyMm1dMBjk29/+NgcPHmTb
      tm2EQiFef/119u3bRyqV4tixY5w/f54NGzakTb9mCjkJngY6OzvZvn07n/vc5/jVr34FwOnT
      pzl79iy/+c1vWL16NXV1dZw+fZqtW7cya9YsvvGNb+D3+z/V9tva2ujr6+O73/3upFAURUFR
      FBwOB5WVlXzrW9/id7/7Hdu3b2fOnDn88pe/JBqNsnfvXvbv308kEqGzsxNVVTFNk/Xr1//N
      6dd0JgFMA4FAgC1btgDQ398P3J6axONxBgcHicViRKNRduzYQUVFBa+99hpZWVmfevsHDhyg
      sbGRvLy8tOWGYUzs/Hepqkpubi7xeBxd12lqamJgYIDBwUEAxsbGGB8fZ2RkhFu3bj32V+eR
      AKaBmpoaampqJv5vWRa7d+/G4XDw2muvUVhYODGH/+pXv0o4HP7IKc/AwAC/+MUvqKqqYtOm
      TbjdbizLwufzsWLFiklTq2PHjrFt2zY2b95MfX09LpeLjo4Ofvvb31JbW0thYSFf+tKX0u5z
      48YNhoaGWLduHS+88MLDeUL+gSSAacrtdhMOhyd2Wl3XuXDhAq+++uqkty6fe+45vvOd79DR
      0cEHH3zAqlWrJk50R0dHWbFiBdXV1ZN+Rl1dHV1dXfzwhz/k8uXL6LpORUUFn//853n++ec/
      cmrjcDgIhUKP9bTnfvLHcDNEPB7nZz/7GT6fjy9+8Yt4PPIdSn+LoiiKvfeaGURRFOrr61mw
      YIHs/P8PcgQQtiV/Di1sTwIQtibzhmlsLDLCrYH+Rz2MCUWlZbjcM+v8QgKYxoYGBznbfvJR
      D2NCdjh3xgUgUyBhaxKAsDUJQNiaBCBsTQIQtiYBCFuTAIStSQDC1iQAYWsSgLA1CUDYmgQg
      bE0CELYmAQhbkwCErUkAwtYkAGFrEoCwNQlA2JoEIGxNAhC2JgEIW3sIX4tiYaSS6JYDTdNQ
      HcrEcss0MQwDw7RAub3e4VBQ7qw3DQMTB6rqYOJelomeMnCkbUuIzMh4AFb8Jn/6xX9xNBbi
      uc1fYWX17auYmKk4184dZf+hU1wdiqN6w8xdvJKVi2eT7dFQGKfr0EF6UiU0PV1HFoClM9Zz
      nN9uv8iif/1nnsybeZfoEY9WZgOw4vQe28u1/DUs1NvuW24wfLWd/YcuUty0hX+Zm8943yne
      23WY454smp8sxzVpMmaRiPRy+Og58paupC48M76PXkwvGTwHsIj1trPnkos1T1Vz/2u1ZSTp
      u9iNWbyQRbMLcasqoZL5LKvNp+/KRSJxY9LWzNQ4F0+e4IazkiXzy3CqMv0RmZe5AOL9tB69
      RE79IsqD6VcwMfUUt0ZGCJeVEXDe2ZEdTgoK84jHRxmPJydtLtrfwclz48xvWEqh34Xs/uJh
      yMgUyDKTXD3bTp+ngFVzylCNgbT1pmESi47h8XruK07B68tCi11lMJWiHA3QiY0Mcv3aRTq3
      txBc+QoLS3zcf+5rWRb3X9Lg7v8NY/JR5HFnWdPrAnSWZc6453nqAVgW8aErdHTdovTJZ8jz
      q6RGPt1dFYUHXtljXOno4MZAO6NDOawr9E66GJxhGGm/hLtXKZxpvxgAXZ9ejymVSpFMTj5a
      P86mHICFxZWOIwz55tFYEUYFUg/eSFHQnC5MI/0VTdd1DKeGd+LqhUFqnnqOptVVXHz/D5zc
      d4yCdU9RErg3pdI0Le1qMDP5CjH3X9F9OnC53DPm4nh3ZWCvucqhHcfo9Fyh79w+FMDUk9zq
      v452+b84PmcFr2yoIxQM0TM8Qopsbv9aLSIjI+B2EXS5AP3eJh0+5i5r5vr2nRxqzWdDUw1+
      9SN/uBBTkoEAStjynf/g/oN1ItLP/ve2EVjyBRqrQ/g8CvnFeXR82EFvbTEV2RpWcpALF26S
      k1dLIMtJWgCAM1DC8ubl7NhzjA/ygzTVFKHJB2Eiw6YcgKJo+AKBtGVOM4bLqeLxZRHwuQEo
      mbWIqp5dHNq/j4HyPOL95+ke8bFiWTVZ2uQdW1Ec+MtqaFpwlT/s3U9R7gvMLfDJu0Eiox7K
      xFlzZzG7fhmesOvesmARjWvXkd1+mks9l3AGSlj1zAIq8713dmonOWVVOMwg92a+Lkrrm1if
      OMV40sDiwZNmIaZGLpM6jV25eIEzp1of9TAmNDSvJTscftTDyBi5TKqwPQlA2JoEIGxNAhC2
      JgEIW5MAhK1JAMLWJABhaxKAsDUJQNiaBCBsTQIQtiYBCFuTAIStSQDC1iQAYWsSgLA1CUDY
      mgQgbE0CELYmAQhbkwCErUkAwtYkAGFrEoCwNQlA2JoEIGxNAhC2JgEIW5MAhK1JAMLWJABh
      axKAsDUJQNiaBCBsTQIQtiYBCFuTAIStSQDC1iQAYWsZuLq0hWUYxEaHGB6NkUwZ4FDxZGUT
      Dgdxaw4UwNITDN/qZ2gsmXZvdzCfwpwAmsNgPDJGwnISyPah3t26HqP/5iievDyCLnXSTxdi
      KqYegAXR/rMcOHCa4ZSOYViYloWlaJTWNtBQX4Xf5cCIXOOvf9nOpViAnCznxN3zap4iFAyg
      uRJcPnWMnlQJTU/XkQVgJRk4d4TtB0ZY8dJzEoDIuAwcAcCheSmbv5zGiiKCXifo41zrOMhf
      Tp2koLiA+cVZxMejmP4Snn32RWoKXJ9iqxaxwUscPnmVioanqc52Z2KoQqTJyDmAN/cJ6uZV
      EPK5cCgKDqePkvIqglqK0fE4Fibj42Ng+vB5nX97g4CZHKPrxAdEAnN5sqYYzaFkYqhCpJn6
      EUBRuH/XtEyDRGyEnq4uEq4QZTnZKJZBbHSY6JhCNHKD61FwaC58/gA+t5PJ+7ZJf/ch2q9l
      8dSmpeS6VWT3Fw9DRqZAAIlIPz09lxgajXLjcg9DSh7LmldREnKimCncXh9W4iz7d1wBLBTV
      R7ioiieXLqQyP4CmAMTpv3yO1mNDXD5yhrKNX2FWdvrOb5ompmmm/R/AsqxMPZRpwzSNRz2E
      NIahk0qlHvUwMipjAZh6gtGhQQYjSXR3iDyPi7GREZIFWXhVJ0Xzmvm3ec0AWJZB7NY12g7s
      peWwwqZ1jeT4AEzi0Qi3+g2Gx5084Zo8Q7MsK21nv/vv+6OYKaZb1JZlzbjnOWMBeHPKWNJc
      hmUaxKMj3LzUweETx3FmNbOwPJx2sqEoKlm5ZSxZNI+O3Ve4GY2T43MAPsprZ9O0ZjY383ey
      //0WCjc+y6zwvWGqqoqqpr8bpCgKmpaxhzJtqOr0ekya5sTtnllvRkz5JPjBV2TFoeINhKmo
      q6XCHeXK1SFShoVhGDz4gqZpTlTtI+b3iouK+pXMzbrBocMnGUyak+4rRCZk5F2ggctnudo/
      wnjq9k5uGTqj/dcZiKlkh3xgJOg+eYiu3gFiSR3LskjGhujoOIcjGCbP55m0TdWbw6Lm1WQP
      fcjB1gskZ9ihV0wPGTnG3uppo+3mGbK8bjRVAcskPh7FUTqHuoo8NEWHxC3aj/6Vc24XmupA
      T8SIxj0sXF5H0KcByQe2quDOLWf50ln8cc8h2osLWVIRkHeDREZNOQAFqG7cSOBaH4PDoyR0
      E8vhJBAuoLSkAL9HQ0FlTsMGCvqv03t9gFjKRPM8QWFpGYXhLFQFwEVxTT1B08u9WaaTvOql
      /JOSTzJres2HxcyQkc8BNHeAkicClHz8jVBUN6GiSkJFlR87lGB+EcEHF6teiufMm/Iwhfgo
      8tegwtYkAGFrEoCwNQlA2JoEIGxNAhC2JgEIW5MAhK1JAMLWJABhaxKAsDUJQNiaBCBsTQIQ
      tiYBCFuTAIStSQDC1iQAYWsSgLA1CUDYmgQgbE0CELYmAQhbkwCErUkAwtYkAGFrEoCwNQlA
      2JoEIGxNAhC2JgEIW5MAhK1JAMLWJABhaxKAsDUJQNiaBCBsTQIQtiYBCFuTAIStSQDC1qZ+
      pXgsjGSMa10f0nmhl6FoAkv1UFBZw4L5c8nN0lDu3C45co1TJ1rpvjGGM1hM/eIlVBf5UQFI
      cqP7AreMbGbNLcZ9d+vRaxw+eJGCxqVUB90fMwYh/j5TPwJYMHz5KPvbbuAvncviJctYVFfJ
      +IW/8qfdx+iPGgAkh3vZ9+6fOTeeTf2ixZT7Btm788+cuTaGBYDOcN9VrvQOoU9sO0rX8YN0
      DFkEneqUhyrEgzJwBIBwVRMvVTrQVBVFAbB4Is/L27vbudRfQ543i97zH3BNr+KZ5hWUZDmw
      ZhXiSv6FD0+doyxvEdmu9G1aps5A10mOXLZofGYhuR4JQGTe1I8AioJDc+FyajgcCoqioACG
      kQJUNFXFSqW4ea0f/6y5FPpVFEXB4QxSUVnI2OgNorHkpM0mI720negir7aB6qIAjttlCZFR
      GT8JNlPjXD/fRsvhDjwls6nK82MaBmPjUYKh4H2HHIVAMBviCSKp1ANbSXHhxF4GA/NZVl+B
      V07VxUOSkSkQQKS3g73v7+HSYApdDTF/2XKa6qsJe1X0qIWeSuF0pO/Jmqai6gZx0+R2iyOc
      3neMjtM+9PEQG762gFxP+iu/ruvo+sRZApZlYVkWyeTko8jjLpWaXo8pkYgTi8Ue9TAyKmMB
      +AuqefrFYhKJOAO9XZw6+Vd2RxKsX/UZAgqgKNw5251gWbcXObi7k/uZs+wZFjXmc+zXv+fS
      pWHmLcjH6bgXgaqqOO4LSdd1FEVBVWfeOYLT6XzUQ0jjcrnweDyPehgZlbEAHE43/mw3fiC3
      oIjq6gre/eNBWs8XsHJ2AL8/wPD4OCaBO/Mui1hsDN3nIex0Aiag4vL6CeU+wbpNa9n+znaO
      ZH2Oxtk5OO80oCi3zzPuuvt/h2MmzpOm13mPojhm3PM85UdjWRamaT6wVEHL8hN2K8SiCRRV
      IzcnzMiVK0RSdw4DZpKbfYP4skL4vJNf6bLy57HsMwVcOHGUnqEYpjXpJkJMWUZy7mz5DS1t
      3QyOJTEtMFNRej5s5dyoRmlRGE1zUVxZjXrzFB+c7SNhGAxdbefYuVuUV1UTdE+eviiah8on
      G5nj7WfvvnaiKSMTQxUiTUamQEWzZnHhYAv/u6uf0XgKNB/5FTUsbW6mrjSIojgIlszn6VUJ
      3t/7a/7zD1GcgSIWNK1l8dx8tDsZpk9vFDRvLoubl3Pz1++x92w1z38mT/52Q2SUYlnWYz25
      SKVSKIqCpmXsdGbauHLxAmdOtT7qYUxoaF5Ldjj8qIeRMYqiKP8HYUagWTjG6hMAAAAASUVO
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Number of tweets by the hour' width='192'>
      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
      PGICtwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Popular hashtags' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Public metrics overview' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sentiment dstribution' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAASm0lEQVR4nO3d6XMU953H8Xf33LoldCKQBAgjxCHAiNNgcdmOHRxnHZfXebSPdms3qdq/
      YR/sEye1DxJXbVX2QarybMuO7awvTAw2pwEhDiODBAKEkJDQOZJGc3f3PhAzkrAkBkbDDPy+
      ryoK6OmRvtPTn+me6/vVLMuyEEJBmqZperqLECKdJABCaRIAobS0BcA0TQzDmHcdwzAwTfMp
      VfRolmURjUbTXUbGikajZNJTykT2sbQeAR61sUzTzKgNCjxyg6os07aNZVmZHQAh0k0CIJQm
      ARBKkwAIpUkAhNIkAEJpEgChNAmAUNpjBcCIhAiGIsTfmrIsjGiYCZ8P34SfiBF719YgPG09
      04gQCss7qCLz2BNZybJMBjuvcPpcC17XOt57qxEnYBp+jn3xJRP2bDQjhOFZzIG9W8my3efw
      /3XxyjvbcFoR2k4e4n7RZvasq0jxzRHi8SR0BDAiPvrGXbz22ssUuqYy47t5juHizbzx+s94
      4+CbVNm6uXZ3bMZ1+zsucS1Yyq615QtbuRALIKEA2J15rFtfh8uugza13FVQSmSoB3/EJOIf
      xevXKMh1xy8Pj/VwoW2InTs2Yde0WX6yEOmV0CnQXJzFtazKO8znH38EQNnyBpYWOgHo7Wjm
      Q+8VljTupyzXEb9OOBwGJj+oZJrmvJ+uNE0TTdPQMig8hmFk3Af0MoVpmoRCoXSXEWdZVnw/
      m0sSAbAYutlMFzX84u167FEfLadO0NZTwfqlUFHbyO79FRw/1krvskoW508Gw+mc/Ns0TUzT
      xG6fu4RIJIKu69hsticvcwFZlkU4HMblcqW7lIwUCoVwOp0Z84BlGAaGYcT3udkk8TKoyWD3
      HYqWLMftsOHw5FNe4KS33xtfw11YzdY1ZZw8eY6QPGiKDJTQESA83sv3Z1oJh4e5dSvAUdsg
      i1c0UL9lD9c++4wvbxZiiwaZMDy8vH8p0Be/bnHtBjYMH+bQiWu8uXs1mfHYIMQkLZGuEKYR
      ZnxsgulnUk5PNlkuB0YkyIQ/hKXpeLKycTlsgEEwYODyONGYfB8gEDLIynLHAyCnQM+fZ+0U
      SNM0LaEjgG5zkl84+w+xOz3kOz0PLbXh9kzttLrNQXaWAyEyjXwUQihNAiCUJgEQSpMACKVJ
      AITSJABCaRIAoTQJgFBaUp8GfR5Fo1HGx8dnLLPb7eTm5qapIpFKEoCHRCIRzvzxP/FeaY4v
      W//v/8Gal5rSV5RIGQnANJZl4fV6uXCtndaWVoKGRWW2k+K+PlY/+G6CeL7Ic4BphoaG+P3v
      f0/n3W6qclz4ogYR0+LDjz/m1KlT6S5PpIAEYJpLly7R0NDAwa0bqSvwUO5xUJvn4h/f+gVH
      jx4lEomku0SxwCQA0+i6PuM0J/CgzUtOTja6rksAnkPyHGCajRs3cuzYMfqaL+G7N0rUgjyH
      jYmJCerq6vB4PBKC54wEYJrCwkJ+85vf8JebF/GO3WdJthOHTWfRokXsfvmAPAl+Dskp0DSm
      aTIyMoI/EKTYPfnYcLx3jE8OH8Hr9T7i2uJZJAGYpquriw8++IARf4Avu0c53e8jy66TY9f5
      85//nO7yRApIAKZpb29n37597KlfSWNxNjfHgjQUZbFrxw7C4TCBQCDdJYoFJgGYRtO0+JPc
      co+DUrcDm65hWY8etymeTRKAaWpra+nu7sYwDbLsOrvLc9GBnp4e7HY7brf7kT9DPFskANNU
      V1dz8OBBAHRNo8BlR9M0CgsLee+99+RVoOeQBGAam81GZWUlNn1mH6LCwkLa29szqu+lWBgS
      gAQYhkFLS8u8jXzFs+mx3gjzDd6lz+9heVXxVHLMELfarjEwHqagrJra6jJsmp/uOxNUVJdg
      A0Jj/dwbt7OssmjBb8BCam5u5oMPPqD/0llCAwPx5UV//G9wZ6WxMpEqCQXAjAa4dv40nf1D
      jLKCqqpinIBlRrn43ddM5K+gqqIA/9gQE9Ey8hxeLp3rorS6BEKjnDl2ipLNB1J8U5JXWVlJ
      SUkJWxtW4W/zx5evfvdXfN9+K42ViVRJ7Aig6RQva2D12nE+Pzn1jmhkrJPb/lLebKrHoc/y
      BNEyuP3DeUJla6iryFmomlOmoqKCHTt20PmXZha5p1o5lpeWUNg/ksbKRKok2BvURVmZCyZm
      flXQ29kO2RV899X/MRqEFesbWV9bgU2bbIg7fPcaVwed7Nu/Mn7KFOvFGxteMF9v3unrPi2v
      vvoqh4//De9wd3yZw+Hg7bffxuVyYZqmDMiYRyZum/lqSurDcP4JH+MBiwP73sBjjXPi0CEu
      OH5GYw0Mdv3INwEHJev3kOWYOjpEo9F4QbEO0XOJXf40X340DOMn3agHBgZxLg5impNviMWm
      3IiZMu3Nwth0mJQFoLC4lFwWkeO2o1NI/QtLudg3CDVZlC7bwIG31nDmq6+5XFLEhqoCYPLR
      FDK3PfpsgRwd9fLXP/yBTZs28etf/1rao8/hWWuPDkm+DJpTvQbzTgsDYyGMiJ+e3iGKSgrj
      l2uOXBp3NtJ5/ji948/uo+YLK1/gd7/7HXv27El3KWKBJXQECHm7+PrvZwkZAQa9UT79sIOl
      a3ewrW4xe19azekjnxOMapQvr6expggYJK8gCw3IWrSU7Q1DXP6hg/Kd9Rk9Iaa1tZWWlhaM
      0VGwrBmPZNnZ2SxfvlxOf54zCQXAVVDFm+9UzXrZoqp6DlbVP7S0hN0HSh78W6dsxSZeWZFE
      lU/J7du3aW1t5caVm2QPjrG1NIdsu7xX+DyTb4RNo+s6TU1N7DQGOfVNP5/cGabIaWelXz4G
      /bySAMxC1zRWF3ioy3dzdyLMn/70P5xvv8lvf/vbdJcmFpgEYA4ak98PqM5xcfDf/oWS1Q3o
      up5xL/WJ5MgJ7jTbt29n06ZNP1nucrqoqqrKmGmVYuFIAKYpKiqioKDgJ8sj0QiffvopwWAw
      DVWJVJIAJMA0Ta5evSqnP88heQ4wzenTp3n//ffxXr9CeKg/vrzg/f/CkZOXxspEqkgAplm5
      ciX19fWsWKQTuHohvnzNv/4zx1rb01iZSBU5BZqmuLiYXbt2MTY8TLbDFv+Tl5s763MD8eyT
      AEyjaRq7d++mpqZmxnKHw867776Lx+NJT2EiZeQU6CG6rmPTZz4u6JpORUVFRn7WXSRHjgBC
      aRIAoTQJgFCaBEAoTQIglCYBEEqTAAilSQCE0iQAQmkSAKE0CYBQmgRAKE0CIJT2WAEI+UYY
      GPHxk+6ZlsFwXzeDo7H+OWG8w1PrRYPjDI36H76WEGmXUAAsM0LXj2c4dOgzDh1v4+FBQYHB
      23zx2cccu9T5YMkgJ4+0EgVMI8DlE0fo6JfmUiLzJBQA0wgTdlXw89d2ke96uDWIwYXzraxa
      twbPLF1D+tou0GWrZvPKRQtQrhALK6EA2BzZ1NZWY3u4s61lMXj1JL6SjVQV/3SGVmD4Fudv
      Btj70gako47IREl9I8wIDXPyup99P1tC8O69GZf1djTz1xEXSxoPkOecSk6su3JseMF8kxdj
      wzGeZr/52bo/m5YZ7wlkGIZ8M2wOpmlm1CjZ2ASi+YawPHkArCgd544S9NTQ13ULb899hoYn
      6LpfTlUZVNQ2suf1ZZz65gw3K0upLc0GiA8ryNQBGbPt3Lqm43a7sSyLcDgsAzLmoNaADAvy
      qxpYVWrH5/PhDwQJBwP4g5H4Ko7sMrZsquXyme8ZDUtTKZF5Hm9ARmSM271hAuMdVK3dwfbV
      L1BeM7nOQEeIwP0C6qpLgV70B18sL1hax+bh+3x78iq/2LsuowdkCPUkPSAjpqR2G6/Vxv5X
      wetvVzz4t43qhr1UP3mNQqSMvBMslCYBEEqTAAilSQCE0iQAQmkSAKE0CYBQmgRAKE0CIJQm
      ARBKkwAIpUkAhNIkAEJpEgChNAmAUJoEQChNAiCUJgEQSpMACKVJAITSJABCaRIAoTQJgFCa
      BEAoTQIglPZYARjpaePitR7iXT4tC/9wN98d/oovDn3D9Z5hJlvLjnP9x+74ev6hLq509C1c
      1UIskIQCYER8NB/9gnM/tHH9Zl98x44MdvDV2Zus3ryT3VvX0nnma37s9QPjXL86GYCIf5Bj
      3zWTV1yUshshxJNKqDeoZnNT19hEjt7PZye8U1cuqOLnr9TismlALtXlOfSPTkCsLagZoe18
      MzmrtlBVMHeLaiHSJaEA6Lqd3Fw7TMxcrjlcuADLCHP3xmVaB5w0bSoC7hP0jXD98lm6jBL2
      rV4S7wodG1YQmw9gGHO3TZ9vsEGqzPY7Lax4nZZlzVuzymLbJlPmA5im+cj7K6kJMVgWRsTP
      heOHuRMu5uX9TSx6MCgs4Bum6844Wtk67NO2R2wHS2R6x6MuT4VZA2BNbcx01PSsiG2bTApA
      7M9ckgqAZUU58dmHaCv38NbaKuz61A0vLF/B/jc30PLlZ5y/VcK22uLJX/hgIkxsQ803IQZ4
      6hNiZhvZpGsaDocjHgCHw/HU6nmWmKaJw+HImADEJsTMd38l9TJooPcSve4Gdq6bufNP/XQ3
      m/c00X/hKLeHg8n8KiFS4vEmxFhR/AGTTz/sYOnaHazxaIRG2vjko47JFW1u1m/bzarFbsor
      i9ABe3YxL+/ewOWOTmq21MmEGJFRkpwQU8k/1Wye9Tqbd8Re9tTIL3+B3eVPWKEQKSTvBAul
      SQCE0iQAQmkSAKE0CYBQmgRAKE0CIJQmARBKkwAIpUkAhNIkAEJpEgChNAmAUJoEQChNAiCU
      JgEQSpMACKVJAITSJABCaRIAoTQJgFCaBEAoTQIglCYBEEqTAAilJRQAy7Lwjw5w+fuv+fzY
      VaLx5Sb32pv55K8f8dEnn/PjncEHE2IGOHmklQiAZXDv2llOXulOzS0QIgmJTYgJj3H5YiuO
      7BxCviCxZtPGRA/fnrtH0+tv8XrTWjrOnmYgYAIRvMM+LGBi8A5n24ZZ88LilN0IIZ5UQgGw
      u/LZ3rSH+hWLcdim2tuOdV4lb80WCjx2sgqrWbnYpLN3PH65ZUxw8exlVm7ZSaFLzrZE5klq
      PsDY2Cg5xTkPOj5r5Gbl0D3uAzQG7lzhb/97g4K6HeyszItfJxKJAFPDFB41IUbTtFl79qdK
      rL4ZdVgmoVAImOw5H/u3mMkwDMLhcLrLiIvNc5jv/koqADa7fcb0DcM0cbhsgEnR4pVsaMzh
      Ysc9fOFl5DonjwAPD8iYb/hFNBpF13V0/ekdPWYLpKbp8SELMiBjfpm0bWLjkeYbwpJUABZV
      VDJ84x7mqjx0ogwMjVHakA+MYHO4qajdSGj4KCdb2nll22psGvHpIZqmoWnavDt3IusstNmm
      m2hMTqqxLOup1/Osid1nmSD2YDbf/ZXQPWlGAtzv66OvfwjfuJf7fX14fUHc5fVkDVyi9dZd
      rv9wlh6rkhWlnqkrajZqN20nZ/hHWjoGHrxCJETmSPBVoHFu37jBje4AS8vtdN64Qe/wBLoj
      h1cPvkJkoJsRo5C9TY24dYB81r+4HBugO3LYumcv+XrmnBsKEZPQKZAju5Rtu0pn/wFZi3hx
      246HlmZTtTw7/j9nVhGrVjxxjUKkjJzMCqVJAITSJABCaRIAoTQJgFCaBEAoTQIglCYBEEqT
      AAilSQCE0iQAQmkSAKE0CYBQmgRAKE0CIJQmARBKkwAIpUkAhNIkAEJpEgChNAmAUJoEQChN
      AiCUllwALItIYJzenm56eu/jD8Wa2EYY807E26hHQxOMjAeS+lVCpEJSATDCXo589TXXb9/h
      VttlDh85zVjEAgY4/vcrRAHLCHLlxDe03ZtYmIqFWEBJBcB36wITi7ew+6Wd7Nqzn+VZA7R3
      j81Yp7f9Ap3aUrasKk6qUCFSIakAeEqrCHW3MxaMEhzrp3dUp6wwK355cPg2LR0TNO3cwNxN
      0IVIn6TaozsKllJX3M6hTz/G0qBs2TrK8ib7w/d2NPPRiIuljQcocE/lLDZAITYgY77hF7EZ
      Ak+z3fZsAx5MyyQYDAKTLbctS/pcz8Y0zYwaHhIbkDF9hsXDkgiAxf2rJ+l1r+aX7yxDjwa4
      cvY4V26XsnkFVNQ20vRaDaeOnuP20jKWF08eGZxOJzC5sUzTnHd4QSQSQdf1eYdoLLTZdm5d
      03G73ViWRTgcxuVyPbV6niWhUAin05lR8wEMw4jvc7NJ4hTIwucdxpmdh03X0O0uPDaTUd/U
      qz3O3HK2bFjGhdNnGI/MnUIh0iWJI4DOsheb6PjqWz5qA800cOYvoenFxUBffK3C6npeHPqW
      vx9v5Zf71pMZjw1CTErqOYDuKeHVf3hnxrLJw18Fb/yq4sESGzUb91GTzC8SIkWSCsDc53oa
      0y/KlHNCIR4mH4UQSvt/bmhC7fnfo+UAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='155' name='The average profile' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
